name: Hackintosh Kext Builder

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 22 * * *'

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: List & Rest Xcode
      run: |
        ls -n /Applications/ | grep Xcode*
        sudo xcode-select -r
        mkdir -p deploy
    - name: Build Lilu
      run: |
        git clone https://github.com/acidanthera/Lilu.git --depth=10 && cd Lilu
        xcodebuild -configuration Debug > /dev/null 2>&1 ;
        xcodebuild -configuration Release > /dev/null 2>&1 ;
        cd ..
        cp Lilu/build/*/*.zip deploy/
    - name: Build WhateverGreen
      run: |
        git clone https://github.com/acidanthera/WhateverGreen.git --depth=10 && cd WhateverGreen
        src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" || exit 1
        xcodebuild -configuration Debug > /dev/null 2>&1 ;
        xcodebuild -configuration Release > /dev/null 2>&1 ;
        cd ..
        cp WhateverGreen/build/*/*.zip deploy/
    - name: Build VirtualSMC
      run: |
        git clone https://github.com/acidanthera/VirtualSMC.git --depth=10 && cd VirtualSMC
        src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" || exit 1
        xcodebuild -target Package -configuration Debug
        xcodebuild -target Package -configuration Release
        cd ..
        cp WhateverGreen/build/*/*.zip deploy/
    - name: Build AppleALC
      run: |
        git clone https://github.com/acidanthera/AppleALC.git --depth=10 && cd AppleALC
        src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" || exit 1
        xcodebuild -configuration Debug
        xcodebuild -configuration Release
        cd ..
        cp AppleALC/build/*/*.zip deploy/
    - name: Build AirportBrcmFixup
      run: |
        git clone https://github.com/acidanthera/AirportBrcmFixup.git --depth=10 && cd AirportBrcmFixup
        src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" || exit 1
        xcodebuild -configuration Debug
        xcodebuild -configuration Release
        cd ..
        cp AirportBrcmFixup/build/*/*.zip deploy/
    - name: Build BrcmPatchRAM
      run: |
        git clone https://github.com/acidanthera/BrcmPatchRAM.git --depth=10 && cd BrcmPatchRAM
        xcodebuild -configuration Debug -scheme BrcmPatchRAM
        cd build/Products/Debug
        zip -qry BrcmPatchRAM-$(cat ../../../BrcmPatchRAM.xcodeproj/project.pbxproj | grep -i 'CURRENT_PROJECT_VERSION' | head -1 | grep -oE '\d\.\d\.\d')-DEBUG.zip *.kext
        cd -
        xcodebuild -configuration Release -scheme BrcmPatchRAM
        cd build/Products/Release
        zip -qry BrcmPatchRAM-$(cat ../../../BrcmPatchRAM.xcodeproj/project.pbxproj | grep -i 'CURRENT_PROJECT_VERSION' | head -1 | grep -oE '\d\.\d\.\d')-RELEASE.zip *.kext
        cd - && cd ..
        cp BrcmPatchRAM/build/*/*.zip deploy/
    - name: Build OS-X-USB-Inject-All
      run: |
        git clone https://github.com/Sniki/OS-X-USB-Inject-All.git --depth=10 && cd OS-X-USB-Inject-All
        make clean
        make all
        make distribute
        cp Distribute/*.zip ../deploy/
    - name: Deploy
      run: |
        cp -rf src/* deploy/
        cd deploy/
        tree --prune -H '.' -L 1 --noreport --charset utf-8 -P "*.zip" > index.html
        cd ..
        mkdir ./public-git
        cd ./public-git
        git init
        git config --global push.default matching
        git config --global user.email "${GIT_EMAIL}"
        git config --global user.name "${GIT_USERNAME}"
        git remote add origin ${REMOTE_REPO}
        git checkout -b master
        cp -rf ../deploy/* ./
        git add --all .
        DATE="$(echo $(TZ=UTC-8 date '+%Y-%m-%d %H:%M:%S'))"
        git commit -m "Deploy: $DATE"
        git push --quiet --force origin HEAD:master
      env:
        GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
        GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
        REMOTE_REPO: ${{ secrets.REMOTE_REPO }}