name: Hackintosh Kext Builder

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 22 * * *'

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: List & Rest Xcode
      run: |
        echo $GITHUB_WORKSPACE
        brew install tree
        brew install gnu-sed
        ls -n /Applications/ | grep Xcode*
        sudo xcode-select -r
        mkdir -p deploy
    - name: Build Lilu
      run: |
        git clone https://github.com/acidanthera/Lilu.git --depth=10 && cd Lilu
        xcodebuild -configuration Debug > /dev/null 2>&1 ;
        xcodebuild -configuration Release > /dev/null 2>&1 ;
        cd ..
        mkdir -p deploy/Nightly/AppleALC
        cp Lilu/build/*/*.zip deploy/Nightly/AppleALC/
    - name: Build WhateverGreen
      run: |
        git clone https://github.com/acidanthera/WhateverGreen.git --depth=10 && cd WhateverGreen
        src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" > /dev/null 2>&1 || exit 1
        xcodebuild -configuration Debug > /dev/null 2>&1 ;
        xcodebuild -configuration Release > /dev/null 2>&1 ;
        cd ..
        mkdir -p deploy/Nightly/WhateverGreen
        cp WhateverGreen/build/*/*.zip deploy/Nightly/WhateverGreen/
    - name: Build VirtualSMC
      run: |
        git clone https://github.com/acidanthera/VirtualSMC.git --depth=10 && cd VirtualSMC
        src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" > /dev/null 2>&1 || exit 1
        xcodebuild -target Package -configuration Debug > /dev/null 2>&1 ;
        xcodebuild -target Package -configuration Release > /dev/null 2>&1 ;
        cd ..
        mkdir -p deploy/Nightly/VirtualSMC
        cp VirtualSMC/build/*/*.zip deploy/Nightly/VirtualSMC/
    - name: Build AppleALC
      run: |
        git clone https://github.com/acidanthera/AppleALC.git --depth=10 && cd AppleALC
        src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" > /dev/null 2>&1 || exit 1
        xcodebuild -configuration Debug > /dev/null 2>&1 ;
        xcodebuild -configuration Release > /dev/null 2>&1 ;
        cd ..
        mkdir -p deploy/Nightly/AppleALC
        cp AppleALC/build/*/*.zip deploy/Nightly/AppleALC/
    - name: Build AirportBrcmFixup
      run: |
        git clone https://github.com/acidanthera/AirportBrcmFixup.git --depth=10 && cd AirportBrcmFixup
        src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/bootstrap.sh) && eval "$src" > /dev/null 2>&1 || exit 1
        xcodebuild -configuration Debug > /dev/null 2>&1 ;
        xcodebuild -configuration Release > /dev/null 2>&1 ;
        cd ..
        mkdir -p deploy/Nightly/AirportBrcmFixup
        cp AirportBrcmFixup/build/*/*.zip deploy/Nightly/AirportBrcmFixup/
    - name: Build BrcmPatchRAM
      run: |
        git clone https://github.com/acidanthera/BrcmPatchRAM.git --depth=10 && cd BrcmPatchRAM
        xcodebuild -configuration Debug -scheme BrcmPatchRAM > /dev/null 2>&1 ;
        cd build/Products/Debug
        zip -qry BrcmPatchRAM-$(cat ../../../BrcmPatchRAM.xcodeproj/project.pbxproj | grep -i 'CURRENT_PROJECT_VERSION' | head -1 | grep -oE '\d\.\d\.\d')-DEBUG.zip *.kext
        cd -
        xcodebuild -configuration Release -scheme BrcmPatchRAM > /dev/null 2>&1 ;
        cd build/Products/Release
        zip -qry BrcmPatchRAM-$(cat ../../../BrcmPatchRAM.xcodeproj/project.pbxproj | grep -i 'CURRENT_PROJECT_VERSION' | head -1 | grep -oE '\d\.\d\.\d')-RELEASE.zip *.kext
        cd $GITHUB_WORKSPACE
        mkdir -p deploy/Nightly/BrcmPatchRAM
        cp BrcmPatchRAM/build/Products/*/*.zip deploy/Nightly/BrcmPatchRAM/
    - name: Build AppleIntelWifiAdapter
      run: |
        git clone -b feature-rewrite-all https://github.com/zxystd/AppleIntelWifiAdapter.git --depth=10 && cd AppleIntelWifiAdapter
        xcodebuild -configuration Debug > /dev/null 2>&1 ;
        xcodebuild -configuration Release > /dev/null 2>&1 ;
        cd build/Debug
        zip -qry AppleIntelWifiAdapter-$(cat ../../AppleIntelWifiAdapter.xcodeproj/project.pbxproj | grep -i 'CURRENT_PROJECT_VERSION' | head -1 | grep -oE '\d\.\d\.\d')-DEBUG.zip *.kext
        cd -
        cd build/Release
        zip -qry AppleIntelWifiAdapter-$(cat ../../AppleIntelWifiAdapter.xcodeproj/project.pbxproj | grep -i 'CURRENT_PROJECT_VERSION' | head -1 | grep -oE '\d\.\d\.\d')-RELEASE.zip *.kext
        cd $GITHUB_WORKSPACE
        mkdir -p deploy/Nightly/AppleIntelWifiAdapter
        cp AppleIntelWifiAdapter/build/*/*.zip deploy/Nightly/AppleIntelWifiAdapter/
    - name: Build OS-X-USB-Inject-All
      run: |
        git clone https://github.com/Sniki/OS-X-USB-Inject-All.git --depth=10 && cd OS-X-USB-Inject-All
        make clean
        make all > /dev/null 2>&1 ;
        make distribute
        mkdir -p $GITHUB_WORKSPACE/deploy/Nightly/AppleIntelWifiAdapter
        cp Distribute/*.zip $GITHUB_WORKSPACE/deploy/Nightly/AppleIntelWifiAdapter
    - name: Generate HTML
      run: |
        DATE="$(echo $(TZ=UTC-8 date '+%Y-%m-%d %H:%M:%S'))"
        cd $GITHUB_WORKSPACE
        cp -rf src/* deploy/
        cd deploy/
        tree --prune -H '.' -L 4 --noreport --charset utf-8 -P "*.zip" > index.html
        gsed -i 's|<title>Directory Tree</title>|<title>黑苹果 常用 Kext 下载站（每日构建） \| Sukka</title>|g' ./index.html
        gsed -i 's|<h1>Directory Tree</h1>|<h1>黑苹果 常用 Kext 下载站（每日构建）</h1>|g' ./index.html
        gsed -i 's|<a href=".">.</a><br>|<p>最后更新于 {{DATE}}</p><br><a href="/">https://kext.skk.moe</a><br>|g' ./index.html
        gsed -i "s|{{DATE}}|$DATE|g" ./index.html
        gsed -i 's|<p class="VERSION">|<p class="VERSION"><strong style="font-size:120%">Made by <a href="https://skk.moe">Sukka</a> with Love<br></strong>|g' ./index.html
    - name: Deploy
      run: |
        cd $GITHUB_WORKSPACE
        mkdir ./public-git
        cd ./public-git
        git init
        git config --global push.default matching
        git config --global user.email "${GIT_EMAIL}"
        git config --global user.name "${GIT_USERNAME}"
        git remote add origin ${REMOTE_REPO}
        git checkout -b master
        cp -rf $GITHUB_WORKSPACE/deploy/* ./
        git add --all .
        DATE="$(echo $(TZ=UTC-8 date '+%Y-%m-%d %H:%M:%S'))"
        git commit -m "Deploy: $DATE"
        git push --quiet --force origin HEAD:master
      env:
        GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
        GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
        REMOTE_REPO: ${{ secrets.REMOTE_REPO }}
